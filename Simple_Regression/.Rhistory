print ("hello world!")
q()
q()
setwd("~/")
dataset = read.csv('Salary_Data.csv')
dataset = read.csv('Salary_Data.csv')
setwd("F:/Machine_Learning/Simple_Regression")
dataset = read.csv('Salary_Data.csv')
View(dataset)
View(dataset)
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, splitRatio = 2/3)
traing_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
library(caTools)
install.packages("caTools")
install.packages("caTools")
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, splitRatio = 2/3)
traing_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
#Factor not giving numberic so you get x is must numberic error
#Feature Scaling
traing_set[, 2:3] = scale(traing_set[, 2:3])
test_set[, 2:3] = scale(test_set[, 2:3])
install.packages("caTools")
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, splitRatio = 2/3)
traing_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
#Factor not giving numberic so you get x is must numberic error
#Feature Scaling
traing_set[, 2:3] = scale(traing_set[, 2:3])
test_set[, 2:3] = scale(test_set[, 2:3])
split = sample.split(dataset$Salary, splitRatio = 2/3)
#splitting dataset into traing set and test set
# install.package(caTools)
library(caTools)
set.seed(123)
split = sample.split(dataset$purchased, splitRatio = 0.8)
traing_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
#Factor not giving numberic so you get x is must numberic error
#Feature Scaling
traing_set[, 2:3] = scale(traing_set[, 2:3])
test_set[, 2:3] = scale(test_set[, 2:3])
split = sample.split(dataset$purchased, splitRatio = 0.8)
split = sample.split(dataset$purchased, splitRatio = 0.8)
traing_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
traing_set[, 2:3] = scale(traing_set[, 2:3])
test_set[, 2:3] = scale(test_set[, 2:3])
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, splitRatio = 2/3)
traing_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, splitRatio = 2/3)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
traing_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(test_set)
View(test_set)
split = sample.split(dataset$purchased, SplitRatio = 0.8)
traing_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
traing_set[, 2:3] = scale(traing_set[, 2:3])
test_set[, 2:3] = scale(test_set[, 2:3])
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
traing_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(traing_set)
View(traing_set)
View(traing_set)
View(traing_set)
View(traing_set)
View(traing_set)
View(traing_set)
View(test_set)
View(test_set)
View(test_set)
View(test_set)
View(dataset)
View(traing_set)
View(traing_set)
View(traing_set)
View(traing_set)
View(traing_set)
View(traing_set)
View(dataset)
View(dataset)
View(traing_set)
View(traing_set)
View(traing_set)
regressor = lm(formula = Salary ~ YearsExperience, data = training_set)
regressor = lm(formula = Salary ~ YearsExperience, data = traing_set)
summary(regressor)
View(test_set)
View(test_set)
View(test_set)
View(test_set)
y_pred = predict(regressor, newdata = test_set)
regressor = lm(formula = Salary ~ YearsExperience, data = traing_set)
y_pred
install.packages("ggplot2")
install.packages('ggplot2')
install.packages('ggplot2')
install.packages('ggplot2')
install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = traing_set$YearsExperience y = traing_set$Salary),
colour = 'red') +
geom_line(aes(x = traing_set$YearsExperience, y = predict(regressor, newdata = traing_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('YearsExperience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = traing_set$YearsExperience, y = traing_set$Salary),
colour = 'red') +
geom_line(aes(x = traing_set$YearsExperience, y = predict(regressor, newdata = traing_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('YearsExperience') +
ylab('Salary')
library(ggplot2)
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
geom_line(aes(x = traing_set$YearsExperience, y = predict(regressor, newdata = traing_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Test set)') +
xlab('YearsExperience') +
ylab('Salary')
